{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nolis\\\\Documents\\\\Programaci\\xF3n frontend\\\\Practica react\\\\trello\\\\src\\\\components\\\\ColumnContainer\\\\ColumnContainer.js\";\nimport React from 'react';\nimport ColumnList from '../Lists/ColumnList/ColumnList';\nimport Button, { BUTTON_SIZES, BUTTON_STYLES } from '../Button/Button'; // import uuid from 'uuid/v4'\n\nimport { v4 as uuidv4 } from 'uuid';\nimport AddInputControl from '../AddInputControl/AddInputControl';\nimport './ColumnContainer.scss';\n\nclass ColumnContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      columnName: '',\n      columns: []\n    };\n\n    this.addColumnName = event => {\n      this.setState({\n        columnName: event.target.value\n      });\n    };\n\n    this.addColumn = columnName => {\n      const newColumn = {\n        id: uuid(),\n        title: columnName,\n        cards: []\n      };\n      const nuevoArray = this.state.columns.slice();\n      nuevoArray.push(newColumn);\n      this.setState({\n        columns: nuevoArray\n      }); // this.setState({ columnName: '', columns: nuevoArray})\n    };\n  }\n\n  render() {\n    // const { addColumn } = this.props\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ColumnList, {\n      columns: this.state.columns,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"text-input\",\n      placeholder: \"A\\xF1ada otra lista\",\n      onChange: this.addColumnName,\n      value: this.state.columnName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.addColumn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      text: \"A\\xF1adir lista\",\n      type: BUTTON_STYLES.DEFAULT,\n      size: BUTTON_SIZES.SHRINK,\n      className: \"action-button\",\n      onClick: this.addColumn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default ColumnContainer; // const ColumnContainer = () => (\n//     <div className='column-container'>\n//         {\n//             columns.map(column => \n//                 <Column \n//                     key={column.id}\n//                     title={column.title}\n//                     cards={column.cards} >  \n//                     </>)\n//         }\n//     </div>\n// )","map":{"version":3,"sources":["C:/Users/nolis/Documents/Programación frontend/Practica react/trello/src/components/ColumnContainer/ColumnContainer.js"],"names":["React","ColumnList","Button","BUTTON_SIZES","BUTTON_STYLES","v4","uuidv4","AddInputControl","ColumnContainer","Component","state","columnName","columns","addColumnName","event","setState","target","value","addColumn","newColumn","id","uuid","title","cards","nuevoArray","slice","push","render","DEFAULT","SHRINK"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,MAAP,IAAiBC,YAAjB,EAA+BC,aAA/B,QAAoD,kBAApD,C,CACA;;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAO,wBAAP;;AAEA,MAAMC,eAAN,SAA8BR,KAAK,CAACS,SAApC,CAA8C;AAAA;AAAA;AAAA,SAC1CC,KAD0C,GAClC;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,OAAO,EAAE;AAFL,KADkC;;AAAA,SAM1CC,aAN0C,GAM1BC,KAAK,IAAI;AACrB,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,UAAU,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAA3B,OAAd;AACH,KARyC;;AAAA,SAU1CC,SAV0C,GAU7BP,UAAD,IAAgB;AACxB,YAAMQ,SAAS,GAAG;AACdC,QAAAA,EAAE,EAAEC,IAAI,EADM;AAEdC,QAAAA,KAAK,EAAEX,UAFO;AAGdY,QAAAA,KAAK,EAAE;AAHO,OAAlB;AAKA,YAAMC,UAAU,GAAG,KAAKd,KAAL,CAAWE,OAAX,CAAmBa,KAAnB,EAAnB;AACAD,MAAAA,UAAU,CAACE,IAAX,CAAgBP,SAAhB;AACA,WAAKJ,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAEY;AAAX,OAAd,EARwB,CASxB;AACH,KApByC;AAAA;;AAsB1CG,EAAAA,MAAM,GAAG;AACL;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWE,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAC,YAFd;AAGI,MAAA,WAAW,EAAC,qBAHhB;AAII,MAAA,QAAQ,EAAE,KAAKC,aAJnB;AAKI,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,UALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAWI;AAAK,MAAA,OAAO,EAAE,KAAKO,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AACI,MAAA,IAAI,EAAC,iBADT;AAEI,MAAA,IAAI,EAAEd,aAAa,CAACwB,OAFxB;AAGI,MAAA,IAAI,EAAEzB,YAAY,CAAC0B,MAHvB;AAII,MAAA,SAAS,EAAC,eAJd;AAKI,MAAA,OAAO,EAAE,KAAKX,SALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAXJ,CADJ,CADJ;AA2BH;;AAnDyC;;AAsD9C,eAAeV,eAAf,C,CAGA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\r\nimport ColumnList from '../Lists/ColumnList/ColumnList'\r\nimport Button, { BUTTON_SIZES, BUTTON_STYLES } from '../Button/Button'\r\n// import uuid from 'uuid/v4'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport AddInputControl from '../AddInputControl/AddInputControl';\r\nimport './ColumnContainer.scss';\r\n\r\nclass ColumnContainer extends React.Component {\r\n    state = {\r\n        columnName: '',\r\n        columns: []\r\n    }\r\n\r\n    addColumnName = event => {\r\n        this.setState({ columnName: event.target.value })\r\n    }\r\n\r\n    addColumn = (columnName) => {\r\n        const newColumn = {\r\n            id: uuid(),\r\n            title: columnName,\r\n            cards: []\r\n        }\r\n        const nuevoArray = this.state.columns.slice()\r\n        nuevoArray.push(newColumn)\r\n        this.setState({ columns: nuevoArray })\r\n        // this.setState({ columnName: '', columns: nuevoArray})\r\n    }\r\n\r\n    render() {\r\n        // const { addColumn } = this.props\r\n        return (\r\n            <div className='column-container'>\r\n                <div className='columns'>\r\n                    <ColumnList columns={this.state.columns} />\r\n                    <input\r\n                        type='text'\r\n                        className='text-input'\r\n                        placeholder='Añada otra lista'\r\n                        onChange={this.addColumnName}\r\n                        value={this.state.columnName}\r\n\r\n                    ></input>\r\n\r\n                    <div onClick={this.addColumn}>\r\n                        <Button\r\n                            text='Añadir lista'\r\n                            type={BUTTON_STYLES.DEFAULT}\r\n                            size={BUTTON_SIZES.SHRINK}\r\n                            className='action-button'\r\n                            onClick={this.addColumn}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ColumnContainer;\r\n\r\n\r\n// const ColumnContainer = () => (\r\n    //     <div className='column-container'>\r\n    //         {\r\n    //             columns.map(column => \r\n    //                 <Column \r\n    //                     key={column.id}\r\n    //                     title={column.title}\r\n    //                     cards={column.cards} >  \r\n    //                     </>)\r\n    //         }\r\n    //     </div>\r\n    // )"]},"metadata":{},"sourceType":"module"}